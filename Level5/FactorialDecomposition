def decomp(n):
    numbers = [x for x in range(2,n+1)]
    number_of_occurances = dict()

    while len(numbers) > 0:
        divisor = numbers.pop(0)
        number_of_occurances[divisor] = 1
        new_numbers = list()
        for number in numbers:
            number_holder = number
            while number_holder % divisor == 0:
                number_of_occurances[divisor] = number_of_occurances[divisor] + 1
                number_holder = number_holder // divisor
            if number_holder < 2:
                pass
            else:
                new_numbers.append(number_holder)
        numbers = new_numbers
    
    answer = str()
    for key in number_of_occurances:
        if number_of_occurances[key] == 1:
            answer = answer + str(key) + ' * '
            continue
        answer = answer + str(key) + '^' + str(number_of_occurances[key]) + ' * '
        
    answer = answer.strip(' * ')
    return answer
