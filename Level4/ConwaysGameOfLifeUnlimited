def print_cells(grid):
    cells = grid.copy()
    for row in cells:
        print(row)

def pad_cells(grid):
    cells = []
    for entry in grid:
        cells.append(entry)
        
    i = 0
    while i < len(cells):
        row = cells[i]
        row.insert(0, 0)
        row.append(0)
        cells[i] = row
        i = i + 1
    length = len(cells[0])
    new_row = []
    i = 0
    while i < length:
        new_row.append(0)
        i = i + 1
    cells.append(new_row)
    cells.insert(0, new_row)

    return cells

#A little ugly, but it works.

def crop_cells(grid):
    cells = grid.copy()
    while 1 not in cells[0]:
        del cells[0]
    while 1 not in cells[-1]:
        cells.pop()
    flag = True
    while flag:
        column = [x[0] for x in cells]
        if 1 in column:
            break
        else:
            i = 0
            while i < len(cells):
                x = cells[i]
                x.pop(0)
                cells[i] = x
                i = i + 1
    while flag:
        column = [x[-1] for x in cells]
        if 1 in column:
            break
        else:
            i = 0
            while i < len(cells):
                x = cells[i]
                x.pop()
                cells[i] = x
                i = i + 1

    return cells

def next_generation(grid):
    cells = grid.copy()
    neighbors = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]
    new_cells = []
    rows = len(cells)
    columns = len(cells[0])
    i = 0
    while i < rows:
        new_row = []
        j = 0
        while j < columns:
            count = 0
            for neighbor in neighbors:
                x = i + neighbor[0]
                y = j + neighbor[1]
                if 0 <= x < rows and 0 <= y < columns:
                    count = count + cells[x][y]
            alive = cells[i][j]
            if alive and count < 2:
                new_row.append(0)
            if alive and count > 3:
                new_row.append(0)
            if alive and (count == 2 or count == 3):
                new_row.append(1)
            if not alive and count == 3:
                new_row.append(1)
            if not alive and count != 3:
                new_row.append(0)
            j = j + 1
            
        new_cells.append(new_row)
        i = i + 1
        
    return new_cells
    

def get_generation(cells, generations):
    grid = [x[:] for x in cells]

    i = 0
    while i < generations:
        grid = pad_cells(grid)
        print(cells)
        grid = next_generation(grid)
        grid = crop_cells(grid)
        i = i + 1
    print(cells)
    return grid
