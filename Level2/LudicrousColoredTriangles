import math

def triangle(row):
    converter = {"BB":"B","RR":"R","GG":"G","GB":"R","BG":"R","BR":"G","RB":"G","GR":"B","RG":"B"}
    
    #Find the difference between each (3n + 1) gap.
    gaps = list()
    length = len(row)
    lengths = [length]
    
    while length > 1:
        n = math.log(length - 1, 3)
        n = math.floor(n)
        gap = 3 ** n + 1
        length = length - (gap) + 1
        lengths.append(length)
        gaps.append(gap)
    gaps.reverse()
    points_needed = [0]
    
    #Create a list of points needed.  #There is no need to calculate entire rows.
    for gap in gaps:
        new_points = list()
        for point in points_needed:
            new_points.append(point)
            new_points.append(point + gap - 1)
            points_needed = new_points
            
    #Start converting points needed into their appropriate colors.
    colors = list()
    for point in points_needed:
        colors.append(row[point])
        
    while len(colors) > 1:
        length = len(colors)
        new_colors = list()
        i = 0
        while i < length // 2:
            new_colors.append(converter[colors[i*2]+colors[i*2 + 1]])
            i = i + 1        
        colors = new_colors

    return colors[0]
